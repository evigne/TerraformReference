1
00:00:07,120 --> 00:00:14,770
Now, creating the keep here, actually, for SSA pushing into the server is not very optimal if we

2
00:00:14,770 --> 00:00:17,620
have to do it manually all the time, right.

3
00:00:17,620 --> 00:00:25,480
If we have to go to the iTunes console and then we have to create it here and then download it locally

4
00:00:25,810 --> 00:00:31,870
and copy it to the sausage folder and said it's stricter X's and so on.

5
00:00:32,060 --> 00:00:34,730
So it's all a lot of manual work still.

6
00:00:34,750 --> 00:00:35,050
Right.

7
00:00:35,230 --> 00:00:42,150
So how can we actually automate this using terraform so that we don't have to do any of this manually?

8
00:00:42,730 --> 00:00:54,430
So let's go back to the config file and I'm actually going to create a resource code eight of us key

9
00:00:55,510 --> 00:00:55,920
here.

10
00:00:56,320 --> 00:01:02,560
So we're going to create the key here using terraformed instead of doing it manually and let's call

11
00:01:02,560 --> 00:01:06,040
it this is a key.

12
00:01:08,620 --> 00:01:18,040
And we have two attributes here, we have the key name, which is the name given here, let's call it

13
00:01:18,130 --> 00:01:22,870
server key to make it different from this one.

14
00:01:23,200 --> 00:01:27,440
And the second attribute is public key.

15
00:01:28,330 --> 00:01:35,890
So basically, it means that we need a public key so that eight of us can create the private public

16
00:01:35,890 --> 00:01:40,570
key peer out of that public key value that we provide.

17
00:01:41,110 --> 00:01:45,400
Now, the question is, where do we get the public key now?

18
00:01:45,400 --> 00:01:51,900
Locally on your machine, you can actually create your own private public key peer.

19
00:01:52,300 --> 00:01:52,630
Right.

20
00:01:53,170 --> 00:02:02,890
And that local keeper is actually located inside the ISS each folder.

21
00:02:03,490 --> 00:02:04,740
So instead, it's a search.

22
00:02:05,050 --> 00:02:11,530
We have something called I.D., RSA, and then we also have any RSA pop.

23
00:02:11,920 --> 00:02:17,790
So this is the public key and this is the private key.

24
00:02:18,070 --> 00:02:18,410
Right.

25
00:02:18,450 --> 00:02:25,990
So if you don't have this key pair or if you don't have this, each folder at all can very easily be

26
00:02:25,990 --> 00:02:34,720
generated, including this is each folder by using by using a comment called S.H. Key, Jane.

27
00:02:35,260 --> 00:02:42,760
So if I execute this, it will basically create a cube here locally and you will end up with the same

28
00:02:44,620 --> 00:02:56,170
SSL folder or dot S.H. folder and these two keys inside and ID RSA part is actually the public key that

29
00:02:56,170 --> 00:02:58,990
we need as a value right here.

30
00:02:59,830 --> 00:03:05,680
So once you generate that key or if you already have that available locally, what it can do is you

31
00:03:05,680 --> 00:03:14,140
can basically just grab that value by just outputting it in the console like this and then just grab

32
00:03:14,140 --> 00:03:17,290
the whole output, including the email at the end.

33
00:03:17,530 --> 00:03:20,020
And pasted in here is a string.

34
00:03:20,270 --> 00:03:24,120
So it starts with DSH, RSA and it ends with your email.

35
00:03:24,130 --> 00:03:30,580
So basically the whole string will be a value in here and that is going to be your public key.

36
00:03:31,040 --> 00:03:36,910
Now again, this is something that you probably don't want to check into the repository or something

37
00:03:36,910 --> 00:03:45,250
that each user of this configuration file will basically want to override locally or set themselves

38
00:03:45,250 --> 00:03:48,830
because every user will have their own public key.

39
00:03:49,180 --> 00:03:57,610
So either we can extract it into a variable and every user of these terraform project can configure

40
00:03:57,610 --> 00:04:07,380
it locally in their own variable file copy so it can be public key or my public key

41
00:04:11,530 --> 00:04:15,350
so we can reference it here and then define the value right here.

42
00:04:15,970 --> 00:04:21,080
There will be one option or we can also reference the file location.

43
00:04:21,310 --> 00:04:24,480
So we don't have to actually provide the string here.

44
00:04:24,640 --> 00:04:29,920
We can just add it to the file location, which makes sense because maybe you don't want to have the

45
00:04:29,920 --> 00:04:31,860
whole content as a string here.

46
00:04:32,140 --> 00:04:36,790
So what we can do here is dollar sign and then we have.

47
00:04:38,500 --> 00:04:39,100
File.

48
00:04:41,620 --> 00:04:44,050
And this basically.

49
00:04:44,990 --> 00:04:53,540
We'll read from a file, and this is going to be location of the file, and again, maybe this location

50
00:04:53,540 --> 00:05:00,740
is different for every user of the project so we can actually make this configurable.

51
00:05:01,220 --> 00:05:06,910
Let's do a public key location.

52
00:05:07,700 --> 00:05:13,390
So this is how you can use file or read from a file to set a value in terraform.

53
00:05:13,640 --> 00:05:16,670
So we have to define this variable

54
00:05:20,490 --> 00:05:24,640
and we're going to have to set it right here.

55
00:05:24,920 --> 00:05:27,260
And this could be an absolute path.

56
00:05:27,650 --> 00:05:31,670
So in our case or in my case, I can set it to.

57
00:05:35,710 --> 00:05:46,000
This and this will be basically the file or the public key location on my laptop and basically each

58
00:05:46,000 --> 00:05:53,310
team member or user of this project can configure this location and filename themselves.

59
00:05:53,560 --> 00:05:57,760
So we make it more generic and reusable for everybody else.

60
00:05:57,790 --> 00:05:58,160
Great.

61
00:05:58,180 --> 00:06:03,820
So now this will basically create the keeper and we can reference this.

62
00:06:03,820 --> 00:06:06,680
Keep here in the IWC.

63
00:06:07,090 --> 00:06:08,500
Easy to instant's now.

64
00:06:08,800 --> 00:06:09,110
Right.

65
00:06:09,130 --> 00:06:11,670
So we have the old here is a reference here.

66
00:06:11,890 --> 00:06:15,550
Now we can update it and set it to the new one.

67
00:06:15,730 --> 00:06:21,490
And instead of hard coding it, we can just reference the key name from the resource.

68
00:06:22,540 --> 00:06:23,440
So let's do.

69
00:06:25,300 --> 00:06:34,930
This is a chicken and the egg tribute and no, let's actually do terraformed plan going to exit from

70
00:06:35,080 --> 00:06:39,160
the server and let's do terraformed plen.

71
00:06:43,920 --> 00:06:50,580
And this is actually very helpful if you make changes to existing resource and you want to know, first

72
00:06:50,580 --> 00:06:55,620
of all, if your configuration is valid, so validate that, first of all.

73
00:06:55,620 --> 00:07:00,870
And second of all, you want to know whether that resource needs to be recreated.

74
00:07:00,870 --> 00:07:01,170
Right.

75
00:07:01,470 --> 00:07:07,410
So it means that whether the attributes can actually just be replaced or does the whole resource need

76
00:07:07,410 --> 00:07:08,390
to be recreated?

77
00:07:08,760 --> 00:07:12,290
And in our case, we see that the server must be replaced.

78
00:07:12,300 --> 00:07:13,790
So it has to be recreated.

79
00:07:14,190 --> 00:07:19,770
So the old one will be removed and a new instance will be created in its place.

80
00:07:20,010 --> 00:07:25,770
And the reason is because we're changing the key and it is not something that we can just exchange in

81
00:07:25,770 --> 00:07:26,880
a running instance.

82
00:07:27,000 --> 00:07:32,010
In this way, TerraForm knows that it needs to recreate the resource.

83
00:07:32,310 --> 00:07:38,100
And we also see a warning here for our Syntex, which basically says that.

84
00:07:38,920 --> 00:07:47,290
The interpellation, which is a fancy word for just combining the string and variable into one string,

85
00:07:47,290 --> 00:07:54,580
basically is deprecated for specific cases where you don't have a string inside, that you only have

86
00:07:54,580 --> 00:07:55,170
the variable.

87
00:07:55,510 --> 00:08:03,130
So we also have a suggestion we can actually fix that warning by removing this whole bit here and leaving

88
00:08:03,280 --> 00:08:08,140
this expression, which actually is cleaner so we can validate that as well.

89
00:08:08,470 --> 00:08:11,550
So this is also interpolation.

90
00:08:11,890 --> 00:08:16,880
However, here we have variable and a string, so we don't get a warning for that.

91
00:08:17,170 --> 00:08:23,890
However, here we only have a variable reference and we're calling this file method.

92
00:08:23,900 --> 00:08:26,310
So no interpolation needed here.

93
00:08:26,620 --> 00:08:29,280
So let's actually run Terfel plan again.

94
00:08:31,120 --> 00:08:33,430
And great, so the warning is gone.

95
00:08:33,670 --> 00:08:38,410
There was a small Syntex issue and this is the same output.

96
00:08:38,420 --> 00:08:42,010
So now we can actually do terraform play.

97
00:08:43,140 --> 00:08:43,890
Or proof.

98
00:08:47,170 --> 00:08:56,140
And let's actually refresh this, and as you see, our previous AC2 instance is shutting down and a

99
00:08:56,140 --> 00:09:03,140
new one will be created in its place and it was destroyed and now a new server is getting created.

100
00:09:03,640 --> 00:09:04,950
Let's refresh it again.

101
00:09:05,320 --> 00:09:09,790
The old one is terminating, a new one is getting initialized.

102
00:09:10,180 --> 00:09:15,450
So let's wait for that to finish and then we'll be able to S.H. into it.

103
00:09:16,510 --> 00:09:25,960
And while we're waiting, we can actually add another output in here that will print us the public IP

104
00:09:26,380 --> 00:09:29,030
of the instance that we just created.

105
00:09:29,350 --> 00:09:37,660
So let's call it easy to public IP.

106
00:09:40,260 --> 00:09:41,940
And we can get the value from.

107
00:09:44,150 --> 00:09:53,240
In this instance, my server, and now we need the attribute name of.

108
00:09:54,290 --> 00:10:00,650
Public IP and like previously, we can also do terraform.

109
00:10:03,100 --> 00:10:04,240
Stage show.

110
00:10:07,030 --> 00:10:16,000
And we can just print out the attributes of Isleta instance, and one of them is public IP and this

111
00:10:16,000 --> 00:10:16,750
is what we need.

112
00:10:24,000 --> 00:10:26,790
And let's save it for the next.

113
00:10:27,970 --> 00:10:28,570
Appli.

114
00:10:30,100 --> 00:10:37,900
Let's refresh it again, this initialised, so now we can S.H. into the server now in this case, we

115
00:10:37,900 --> 00:10:47,350
use our own public key and associated that with the easy to instance so we don't have a dot pen file,

116
00:10:47,350 --> 00:10:47,740
actually.

117
00:10:47,740 --> 00:10:48,030
Right.

118
00:10:48,330 --> 00:10:51,490
So how do we assess into this instance?

119
00:10:52,090 --> 00:10:52,630
Let's.

120
00:10:53,820 --> 00:10:58,800
Go to the terminal and do a secich.

121
00:11:00,510 --> 00:11:08,790
Easy to user, and let's actually grab the public IP of that instance.

122
00:11:14,940 --> 00:11:25,500
Like this, so now we need a private key, just like the pimp file that will allow us to S.H. into the

123
00:11:25,500 --> 00:11:30,000
server and the private key.

124
00:11:33,050 --> 00:11:37,880
Of the private public pier that we use is actually.

125
00:11:39,710 --> 00:11:40,980
This one, right?

126
00:11:41,300 --> 00:11:53,420
So we used I.D. or as a dot pub is a public key and it's Perre because it's a public private Kippy,

127
00:11:53,470 --> 00:11:53,790
right.

128
00:11:53,990 --> 00:11:56,290
So we have those two parts.

129
00:11:56,600 --> 00:12:01,850
So we're going to use the private key to S.H. into the server.

130
00:12:03,020 --> 00:12:06,500
And the private key happens to be this one right here.

131
00:12:07,160 --> 00:12:10,520
And this will basically allow us to assess each.

132
00:12:12,810 --> 00:12:13,650
And there you go.

133
00:12:15,000 --> 00:12:18,040
This is the new instance that we just created.

134
00:12:18,630 --> 00:12:27,780
However, let's actually exit and show you a shortcut for this now, because this is actually a default

135
00:12:27,780 --> 00:12:29,620
location for the private key.

136
00:12:30,150 --> 00:12:34,850
So whenever you do, S.H., this will be actually set as a default.

137
00:12:35,190 --> 00:12:38,070
We can just leave this out.

138
00:12:39,500 --> 00:12:41,330
And just to S.H..

139
00:12:42,520 --> 00:12:43,700
And there you go.

140
00:12:43,930 --> 00:12:47,110
We can still access into the server because.

141
00:12:48,360 --> 00:12:56,670
These two are actually equivalent comments, so you don't have to even specify, so that's actually

142
00:12:56,670 --> 00:13:03,070
one advantage of using the local your own public private key pair.

143
00:13:03,720 --> 00:13:09,530
And again, we created a server and we were able to access into it.

144
00:13:09,900 --> 00:13:16,140
So that means we can actually clean up and remove the server, keep here Dot Pym that we downloaded

145
00:13:16,350 --> 00:13:17,740
because we don't need it anymore.

146
00:13:17,760 --> 00:13:20,110
We can just use our own keep here.

147
00:13:20,130 --> 00:13:21,810
So I'm just going to remove it.

148
00:13:22,590 --> 00:13:23,820
Let's do yes.

149
00:13:24,510 --> 00:13:29,730
And let's actually check that it has been removed and there you go.

150
00:13:29,940 --> 00:13:33,690
The type completion cannot find the file, so it is not there.

151
00:13:33,960 --> 00:13:38,340
And we can actually remove the previous key here as well.

152
00:13:38,350 --> 00:13:41,430
We don't need that anymore and delete.

153
00:13:44,100 --> 00:13:44,530
Great.

154
00:13:44,700 --> 00:13:54,660
So we have automated the part of creating the server key, the S.H. key for the U.S. to instance, also

155
00:13:54,690 --> 00:14:02,850
we terraform and there is a big a really huge advantage in automating most of this stuff with TerraForm

156
00:14:02,850 --> 00:14:09,810
and doing as little as possible manually or in ideal case, doing nothing manually.

157
00:14:10,080 --> 00:14:16,680
And the clear advantage of that is, first of all, when you're creating a lot of resources and you

158
00:14:16,680 --> 00:14:22,350
end up creating some of it and configuring some of this stuff manually, there is a high chance that

159
00:14:22,350 --> 00:14:27,170
you forget about these things when it's time to clean up the resources.

160
00:14:27,180 --> 00:14:27,420
Right.

161
00:14:27,600 --> 00:14:32,970
So when you delete everything using tear from destroy, you may actually forget to delete this stuff

162
00:14:32,970 --> 00:14:40,650
that you created manually or configured manually in other cases if you want to replicate the environment.

163
00:14:40,650 --> 00:14:40,940
Right.

164
00:14:41,100 --> 00:14:46,950
So you created a development environment and then you want to use the same term configuration to create

165
00:14:46,950 --> 00:14:48,120
a staging environment.

166
00:14:48,480 --> 00:14:54,690
Again, if you created some of the parts manually, you have to remember and do the same thing on the

167
00:14:54,690 --> 00:14:58,170
staging environment because they are not part of the config files.

168
00:14:58,980 --> 00:15:04,230
And this means that you have to document that somewhere and you have to know the steps and remember

169
00:15:04,530 --> 00:15:09,260
or if someone else is doing, you have to tell them and share that knowledge with them.

170
00:15:09,480 --> 00:15:09,800
Right.

171
00:15:10,050 --> 00:15:17,400
So there's a clear advantage of automating and basically writing all the code that possible inside the

172
00:15:17,400 --> 00:15:22,330
terraform configuration file and not doing and configuring stuff manually.

173
00:15:22,770 --> 00:15:29,670
So that is actually a best practice, a preferred way of doing it with a clear benefit of basically

174
00:15:29,670 --> 00:15:36,990
saving time and doing all these things like creating keep here, here and then downloading the file

175
00:15:36,990 --> 00:15:42,720
and then saving the file somewhere and so on, because doing stuff manually usually takes more than

176
00:15:42,930 --> 00:15:47,400
just configuring it once and then applying it as many times as you want.
